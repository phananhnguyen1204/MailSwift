{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/types/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAyKlC,4DAAkC;AAClC,sDAA4B","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// Disable eslint for declaration merging using namespace\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable @typescript-eslint/no-namespace */\n\nimport type {\n  Completion,\n  CompletionCreateParamsNonStreaming,\n  CompletionCreateParamsStreaming,\n  ChatCompletionCreateParamsNonStreaming,\n  ChatCompletionCreateParamsStreaming,\n  ChatCompletion,\n  ChatCompletionChunk,\n  ChatCompletionMessage,\n} from \"openai/resources/index\";\nimport type {\n  ContentFilterResultsForPromptOutput,\n  ChatFinishDetailsOutput,\n  ContentFilterResultsForChoiceOutput,\n  AzureChatEnhancementsOutput,\n  AzureChatExtensionsMessageContextOutput,\n} from \"./outputModels.js\";\nimport type {\n  AzureChatExtensionConfiguration,\n  AzureChatEnhancementConfiguration,\n} from \"./models.js\";\n\ndeclare module \"openai/resources/index\" {\n  interface Completion {\n    /**\n     * Content filtering results for zero or more prompts in the request. In a streaming request,\n     * results for different prompts may arrive at different times or in different orders.\n     */\n    prompt_filter_results?: Array<ContentFilterResultsForPromptOutput>;\n  }\n\n  interface CompletionCreateParamsNonStreaming {\n    /**\n     *   The configuration entries for Azure OpenAI chat extensions that use them.\n     *   This additional specification is only compatible with Azure OpenAI.\n     */\n    data_sources?: Array<AzureChatExtensionConfiguration>;\n    /** If provided, the configuration options for available Azure OpenAI chat enhancements. */\n    enhancements?: AzureChatEnhancementConfiguration;\n  }\n\n  interface CompletionCreateParamsStreaming {\n    /**\n     *   The configuration entries for Azure OpenAI chat extensions that use them.\n     *   This additional specification is only compatible with Azure OpenAI.\n     */\n    data_sources?: Array<AzureChatExtensionConfiguration>;\n    /** If provided, the configuration options for available Azure OpenAI chat enhancements. */\n    enhancements?: AzureChatEnhancementConfiguration;\n  }\n\n  interface ChatCompletionCreateParamsNonStreaming {\n    /**\n     *   The configuration entries for Azure OpenAI chat extensions that use them.\n     *   This additional specification is only compatible with Azure OpenAI.\n     */\n    data_sources?: Array<AzureChatExtensionConfiguration>;\n    /** If provided, the configuration options for available Azure OpenAI chat enhancements. */\n    enhancements?: AzureChatEnhancementConfiguration;\n  }\n\n  interface ChatCompletionCreateParamsStreaming {\n    /**\n     *   The configuration entries for Azure OpenAI chat extensions that use them.\n     *   This additional specification is only compatible with Azure OpenAI.\n     */\n    data_sources?: Array<AzureChatExtensionConfiguration>;\n    /** If provided, the configuration options for available Azure OpenAI chat enhancements. */\n    enhancements?: AzureChatEnhancementConfiguration;\n  }\n\n  interface ChatCompletion {\n    /**\n     * Content filtering results for zero or more prompts in the request. In a streaming request,\n     * results for different prompts may arrive at different times or in different orders.\n     */\n    prompt_filter_results?: Array<ContentFilterResultsForPromptOutput>;\n  }\n\n  interface ChatCompletionMessage {\n    /**\n     * If Azure OpenAI chat extensions are configured, this array represents the incremental steps performed by those\n     * extensions while processing the chat completions request.\n     */\n    context?: AzureChatExtensionsMessageContextOutput;\n  }\n\n  namespace ChatCompletion {\n    interface Choice {\n      /**\n       * The reason the model stopped generating tokens, together with any applicable details.\n       * This structured representation replaces 'finish_reason' for some models.\n       */\n      finish_details?: ChatFinishDetailsOutput;\n      /**\n       * Information about the content filtering category (hate, sexual, violence, self_harm), if it\n       * has been detected, as well as the severity level (very_low, low, medium, high-scale that\n       * determines the intensity and risk level of harmful content) and if it has been filtered or not.\n       */\n      content_filter_results?: ContentFilterResultsForChoiceOutput;\n      /**\n       * Represents the output results of Azure OpenAI enhancements to chat completions, as configured via the matching input\n       * provided in the request. This supplementary information is only available when using Azure OpenAI and only when the\n       * request is configured to use enhancements.\n       */\n      enhancements?: AzureChatEnhancementsOutput;\n    }\n  }\n\n  interface ChatCompletionChunk {\n    /**\n     * Content filtering results for zero or more prompts in the request. In a streaming request,\n     * results for different prompts may arrive at different times or in different orders.\n     */\n    prompt_filter_results?: Array<ContentFilterResultsForPromptOutput>;\n  }\n\n  namespace ChatCompletionChunk {\n    interface Choice {\n      /**\n       * The reason the model stopped generating tokens, together with any applicable details.\n       * This structured representation replaces 'finish_reason' for some models.\n       */\n      finish_details?: ChatFinishDetailsOutput;\n      /**\n       * Information about the content filtering category (hate, sexual, violence, self_harm), if it\n       * has been detected, as well as the severity level (very_low, low, medium, high-scale that\n       * determines the intensity and risk level of harmful content) and if it has been filtered or not.\n       */\n      content_filter_results?: ContentFilterResultsForChoiceOutput;\n      /**\n       * Represents the output results of Azure OpenAI enhancements to chat completions, as configured via the matching input\n       * provided in the request. This supplementary information is only available when using Azure OpenAI and only when the\n       * request is configured to use enhancements.\n       */\n      enhancements?: AzureChatEnhancementsOutput;\n    }\n\n    namespace Choice {\n      /**\n       * A chat completion delta generated by streamed model responses.\n       */\n      interface Delta {\n        /**\n         * If Azure OpenAI chat extensions are configured, this array represents the incremental steps performed by those\n         * extensions while processing the chat completions request.\n         */\n        context?: AzureChatExtensionsMessageContextOutput;\n      }\n    }\n  }\n}\n\nexport {\n  Completion,\n  CompletionCreateParamsNonStreaming,\n  CompletionCreateParamsStreaming,\n  ChatCompletionCreateParamsNonStreaming,\n  ChatCompletionCreateParamsStreaming,\n  ChatCompletion,\n  ChatCompletionChunk,\n  ChatCompletionMessage,\n};\nexport * from \"./outputModels.js\";\nexport * from \"./models.js\";\n"]}